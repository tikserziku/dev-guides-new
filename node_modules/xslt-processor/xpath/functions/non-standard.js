"use strict";
Object.defineProperty(exports, "__esModule", { value: true });
exports.extCardinal = extCardinal;
exports.extIf = extIf;
exports.extJoin = extJoin;
var dom_1 = require("../../dom");
var values_1 = require("../values");
var internal_functions_1 = require("./internal-functions");
function extCardinal(context) {
    (0, internal_functions_1.assert)(this.args.length >= 1);
    var c = this.args[0].evaluate(context).numberValue();
    var ret = [];
    for (var i = 0; i < c; ++i) {
        ret.push(context.nodeList[context.position]);
    }
    return new values_1.NodeSetValue(ret);
}
/**
 * evaluates and returns its second argument, if the
 * boolean value of its first argument is true, otherwise it
 * evaluates and returns its third argument.
 * @param context The Expression Context
 * @returns A `BooleanValue`.
 */
function extIf(context) {
    (0, internal_functions_1.assert)(this.args.length === 3);
    if (this.args[0].evaluate(context).booleanValue()) {
        return this.args[1].evaluate(context);
    }
    return this.args[2].evaluate(context);
}
function extJoin(context) {
    (0, internal_functions_1.assert)(this.args.length === 2);
    var nodes = this.args[0].evaluate(context).nodeSetValue();
    var delim = this.args[1].evaluate(context).stringValue();
    var ret = '';
    for (var i = 0; i < nodes.length; ++i) {
        if (ret) {
            ret += delim;
        }
        ret += (0, dom_1.xmlValue)(nodes[i]);
    }
    return new values_1.StringValue(ret);
}
//# sourceMappingURL=non-standard.js.map