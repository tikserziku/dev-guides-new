import { ExprContext } from "../expr-context";
import { BooleanValue, NodeSetValue, NumberValue, StringValue } from "../values";
export declare function boolean(context: ExprContext): BooleanValue;
export declare function ceiling(context: ExprContext): NumberValue;
export declare function concat(context: ExprContext): StringValue;
export declare function contains(context: ExprContext): BooleanValue;
export declare function count(context: ExprContext): NumberValue;
export declare function current(context: ExprContext): NodeSetValue;
export declare function endsWith(context: ExprContext): BooleanValue;
export declare function _false(): BooleanValue;
/**
 * XPath `format-number` function implementation.
 * @param context The Expression Context.
 * @returns A formatted number as string.
 */
export declare function formatNumber(context: ExprContext): StringValue;
export declare function floor(context: ExprContext): NumberValue;
export declare function generateId(context: ExprContext): StringValue;
export declare function id(context: ExprContext): NodeSetValue;
export declare function lang(context: ExprContext): BooleanValue;
export declare function last(context: ExprContext): NumberValue;
export declare function localName(context: ExprContext): StringValue;
export declare function matches(context: ExprContext): BooleanValue;
export declare function _name(context: ExprContext): StringValue;
export declare function namespaceUri(context: ExprContext): StringValue;
export declare function normalizeSpace(context: ExprContext): StringValue;
export declare function not(context: ExprContext): BooleanValue;
export declare function number(context: ExprContext): NumberValue;
export declare function position(context: ExprContext): NumberValue;
export declare function round(context: ExprContext): NumberValue;
export declare function startsWith(context: ExprContext): BooleanValue;
export declare function _string(context: ExprContext): StringValue;
export declare function stringLength(context: ExprContext): NumberValue;
export declare function substring(context: ExprContext): StringValue;
export declare function substringAfter(context: ExprContext): StringValue;
export declare function substringBefore(context: ExprContext): StringValue;
export declare function sum(context: ExprContext): NumberValue;
export declare function translate(context: ExprContext): StringValue;
export declare function _true(): BooleanValue;
export declare function xmlToJson(context: ExprContext): StringValue;
