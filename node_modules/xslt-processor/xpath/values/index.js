"use strict";
// XPath expression values. They are what XPath expressions evaluate
// to. Strangely, the different value types are not specified in the
// XPath syntax, but only in the semantics, so they don't show up as
// nonterminals in the grammar. Yet, some expressions are required to
// evaluate to particular types, and not every type can be coerced
// into every other type. Although the types of XPath values are
// similar to the types present in JavaScript, the type coercion rules
// are a bit peculiar, so we explicitly model XPath types instead of
// mapping them onto JavaScript types. (See XPath spec.)
//
// The four types are:
//
//   - `StringValue`
//   - `NumberValue`
//   - `BooleanValue`
//   - `NodeSetValue`
//
// The common interface of the value classes consists of methods that
// implement the XPath type coercion rules:
//
//   - `stringValue()` -- returns the value as a JavaScript String;
//   - `numberValue()` -- returns the value as a JavaScript Number;
//   - `booleanValue()` -- returns the value as a JavaScript Boolean;
//   - `nodeSetValue()` -- returns the value as a JavaScript Array of DOM
//                       Node objects.
var __createBinding = (this && this.__createBinding) || (Object.create ? (function(o, m, k, k2) {
    if (k2 === undefined) k2 = k;
    var desc = Object.getOwnPropertyDescriptor(m, k);
    if (!desc || ("get" in desc ? !m.__esModule : desc.writable || desc.configurable)) {
      desc = { enumerable: true, get: function() { return m[k]; } };
    }
    Object.defineProperty(o, k2, desc);
}) : (function(o, m, k, k2) {
    if (k2 === undefined) k2 = k;
    o[k2] = m[k];
}));
var __exportStar = (this && this.__exportStar) || function(m, exports) {
    for (var p in m) if (p !== "default" && !Object.prototype.hasOwnProperty.call(exports, p)) __createBinding(exports, m, p);
};
Object.defineProperty(exports, "__esModule", { value: true });
__exportStar(require("./boolean-value"), exports);
__exportStar(require("./node-set-value"), exports);
__exportStar(require("./node-value"), exports);
__exportStar(require("./number-value"), exports);
__exportStar(require("./string-value"), exports);
//# sourceMappingURL=index.js.map