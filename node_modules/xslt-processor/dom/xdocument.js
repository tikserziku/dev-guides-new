"use strict";
var __extends = (this && this.__extends) || (function () {
    var extendStatics = function (d, b) {
        extendStatics = Object.setPrototypeOf ||
            ({ __proto__: [] } instanceof Array && function (d, b) { d.__proto__ = b; }) ||
            function (d, b) { for (var p in b) if (Object.prototype.hasOwnProperty.call(b, p)) d[p] = b[p]; };
        return extendStatics(d, b);
    };
    return function (d, b) {
        if (typeof b !== "function" && b !== null)
            throw new TypeError("Class extends value " + String(b) + " is not a constructor or null");
        extendStatics(d, b);
        function __() { this.constructor = d; }
        d.prototype = b === null ? Object.create(b) : (__.prototype = b.prototype, new __());
    };
})();
Object.defineProperty(exports, "__esModule", { value: true });
exports.XDocument = void 0;
var constants_1 = require("../constants");
var xnode_1 = require("./xnode");
var XDocument = /** @class */ (function (_super) {
    __extends(XDocument, _super);
    function XDocument() {
        // NOTE(mesch): According to the DOM Spec, ownerDocument of a
        // document node is null.
        var _this = _super.call(this, constants_1.DOM_DOCUMENT_NODE, '#document', null, null) || this;
        _this.documentElement = null;
        return _this;
    }
    // TODO: Do we still need this?
    /* clear() {
        XNode.recycle(this.documentElement);
        this.documentElement = null;
    } */
    XDocument.prototype.appendChild = function (node) {
        _super.prototype.appendChild.call(this, node);
        this.documentElement = this.childNodes[0];
    };
    XDocument.prototype.createElement = function (name) {
        return xnode_1.XNode.create(constants_1.DOM_ELEMENT_NODE, name, null, this);
    };
    XDocument.prototype.createElementNS = function (namespace, name) {
        return xnode_1.XNode.create(constants_1.DOM_ELEMENT_NODE, name, null, this, namespace);
    };
    XDocument.prototype.createDocumentFragment = function () {
        return xnode_1.XNode.create(constants_1.DOM_DOCUMENT_FRAGMENT_NODE, '#document-fragment', null, this);
    };
    XDocument.prototype.createTextNode = function (value) {
        return xnode_1.XNode.create(constants_1.DOM_TEXT_NODE, '#text', value, this);
    };
    XDocument.prototype.createTransformedTextNode = function (value) {
        var node = xnode_1.XNode.create(constants_1.DOM_TEXT_NODE, '#text', value, this);
        node.transformedNodeValue = value;
        return node;
    };
    XDocument.prototype.createAttribute = function (name) {
        return xnode_1.XNode.create(constants_1.DOM_ATTRIBUTE_NODE, name, null, this);
    };
    XDocument.prototype.createAttributeNS = function (namespace, name) {
        return xnode_1.XNode.create(constants_1.DOM_ATTRIBUTE_NODE, name, null, this, namespace);
    };
    XDocument.prototype.createComment = function (data) {
        return xnode_1.XNode.create(constants_1.DOM_COMMENT_NODE, '#comment', data, this);
    };
    XDocument.prototype.createCDATASection = function (data) {
        return xnode_1.XNode.create(constants_1.DOM_CDATA_SECTION_NODE, '#cdata-section', data, this);
    };
    XDocument.prototype.createDTDSection = function (data) {
        return xnode_1.XNode.create(constants_1.DOM_DOCUMENT_TYPE_NODE, '#dtd-section', data, this);
    };
    return XDocument;
}(xnode_1.XNode));
exports.XDocument = XDocument;
//# sourceMappingURL=xdocument.js.map